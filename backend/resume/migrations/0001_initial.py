# Generated by Django 4.0.2 on 2022-03-01 07:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('site_title', models.CharField(blank=True, max_length=200)),
                ('webmaster_email', models.EmailField(blank=True, max_length=100)),
                ('favicon', models.ImageField(default='favicon/default.png', upload_to='favicon/')),
                ('start_page_background', models.ImageField(default='start-page-background/default.jpg', upload_to='start-page-background/')),
                ('about_me_image', models.ImageField(default='about-me-background/default.png', upload_to='about-me-background/')),
                ('contact_form_image', models.ImageField(default='contact-form-background/default.png', upload_to='contact-form-background/')),
                ('display_blog', models.BooleanField(default=True)),
                ('display_clients', models.BooleanField(default=True)),
                ('display_contact_form', models.BooleanField(default=True)),
                ('display_portfolio', models.BooleanField(default=True)),
                ('display_resume', models.BooleanField(default=True)),
                ('display_services', models.BooleanField(default=True)),
                ('display_testimonial', models.BooleanField(default=True)),
                ('display_fun_facts', models.BooleanField(default=True)),
                ('display_appointments', models.BooleanField(default=True)),
                ('display_pricing_plans', models.BooleanField(default=True)),
                ('blog_allow_search_box', models.BooleanField(default=True)),
                ('blog_allow_categories', models.BooleanField(default=True)),
                ('blog_allow_latest_posts', models.BooleanField(default=True)),
                ('blog_allow_popular_posts', models.BooleanField(default=True)),
                ('post_allow_search_box', models.BooleanField(default=True)),
                ('post_allow_latest_posts', models.BooleanField(default=True)),
                ('post_allow_related_posts', models.BooleanField(default=True)),
                ('post_allow_tags', models.BooleanField(default=True)),
                ('project_allow_related_posts', models.BooleanField(default=True)),
                ('meta_description', models.TextField(blank=True)),
                ('profile_picture', models.ImageField(default='profile-pics/default.png', upload_to='profile-pics/')),
                ('nationality', models.CharField(blank=True, max_length=50)),
                ('about_me', models.TextField(blank=True)),
                ('my_positions', models.TextField(blank=True)),
                ('video_description', models.CharField(blank=True, max_length=100)),
                ('resume', models.FileField(blank=True, upload_to='resume/')),
                ('address', models.TextField(blank=True)),
                ('latitude', models.FloatField(blank=True)),
                ('longitude', models.FloatField(blank=True)),
                ('phone', models.TextField(blank=True)),
                ('email', models.TextField(blank=True)),
                ('projects', models.IntegerField(blank=True)),
                ('meetings', models.IntegerField(blank=True)),
                ('happy_clients', models.IntegerField(blank=True)),
                ('awards_won', models.IntegerField(blank=True)),
                ('experience', models.IntegerField(blank=True)),
                ('facebook', models.URLField(blank=True)),
                ('twitter', models.URLField(blank=True)),
                ('instagram', models.URLField(blank=True)),
                ('whatsapp', models.URLField(blank=True)),
                ('youtube', models.URLField(blank=True)),
                ('linkedin', models.URLField(blank=True)),
                ('snapchat', models.URLField(blank=True)),
                ('github', models.URLField(blank=True)),
                ('pinterest', models.URLField(blank=True)),
                ('reddit', models.URLField(blank=True)),
                ('stackoverflow', models.URLField(blank=True)),
                ('behance', models.URLField(blank=True)),
                ('skype', models.URLField(blank=True)),
                ('vimeo', models.URLField(blank=True)),
                ('codepen', models.URLField(blank=True)),
                ('dribble', models.URLField(blank=True)),
                ('dropbox', models.URLField(blank=True)),
                ('flickr', models.URLField(blank=True)),
                ('rss', models.URLField(blank=True)),
                ('soundcloud', models.URLField(blank=True)),
                ('tumblr', models.URLField(blank=True)),
                ('yelp', models.URLField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='testimonial_images/')),
                ('position', models.CharField(max_length=100)),
                ('rating', models.IntegerField(default=5)),
                ('message', models.TextField()),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testimonials', to='resume.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='resume.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SkillCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_categories', to='resume.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('level', models.IntegerField()),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='skills', to='resume.skillcategory')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='resume.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('image', models.ImageField(default='services/default.png', upload_to='services/')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='resume.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_categories', to='resume.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('display_project', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=200)),
                ('link', models.URLField(blank=True, max_length=500)),
                ('published', models.DateField()),
                ('featured_image', models.ImageField(upload_to='project_feature_images/')),
                ('description', models.TextField()),
                ('meta_description', models.TextField(blank=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='category_projects', to='resume.projectcategory')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile_projects', to='resume.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PricingPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('display_plan', models.BooleanField(default=True)),
                ('plan_name', models.CharField(max_length=200)),
                ('plan_price', models.CharField(max_length=20)),
                ('price_duration', models.CharField(max_length=50)),
                ('plan_currency', models.CharField(max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('feature_comment', models.CharField(blank=True, max_length=200)),
                ('features', models.TextField()),
                ('plan_icon', models.ImageField(default='plan-icons/default.png', upload_to='plan-icons/')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_plans', to='resume.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('message', models.TextField()),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='resume.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Experiences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='experiences/')),
                ('position', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('date_from', models.DateField()),
                ('date_to', models.DateField()),
                ('currently_working', models.BooleanField(default=False)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to='resume.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.CharField(max_length=200)),
                ('field', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='educations/')),
                ('description', models.TextField(blank=True)),
                ('date_from', models.DateField()),
                ('date_to', models.DateField()),
                ('currently_studying', models.BooleanField(default=False)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='educations', to='resume.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='client_images/')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clients', to='resume.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_categories', to='resume.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('display_article', models.BooleanField(default=True)),
                ('author', models.CharField(max_length=200)),
                ('title', models.CharField(max_length=200)),
                ('short_description', models.TextField()),
                ('description', models.TextField()),
                ('featured_image', models.ImageField(upload_to='blog_feature_images/')),
                ('meta_description', models.TextField(blank=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='category_blogs', to='resume.blogcategory')),
                ('tags', models.ManyToManyField(related_name='blogs', to='resume.Tags')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile_blogs', to='resume.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sunday', models.BooleanField(default=True)),
                ('sunday_start_time', models.TimeField(blank=True)),
                ('sunday_end_time', models.TimeField(blank=True)),
                ('monday', models.BooleanField(default=True)),
                ('monday_start_time', models.TimeField(blank=True)),
                ('monday_end_time', models.TimeField(blank=True)),
                ('tuesday', models.BooleanField(default=True)),
                ('tuesday_start_time', models.TimeField(blank=True)),
                ('tuesday_end_time', models.TimeField(blank=True)),
                ('wednesday', models.BooleanField(default=True)),
                ('wednesday_start_time', models.TimeField(blank=True)),
                ('wednesday_end_time', models.TimeField(blank=True)),
                ('thursday', models.BooleanField(default=True)),
                ('thursday_start_time', models.TimeField(blank=True)),
                ('thursday_end_time', models.TimeField(blank=True)),
                ('friday', models.BooleanField(default=True)),
                ('friday_start_time', models.TimeField(blank=True)),
                ('friday_end_time', models.TimeField(blank=True)),
                ('saturday', models.BooleanField(default=True)),
                ('saturday_start_time', models.TimeField(blank=True)),
                ('saturday_end_time', models.TimeField(blank=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='resume.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
